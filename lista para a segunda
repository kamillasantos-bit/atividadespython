{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN5a6X/SRpIrFy9VeocBrOy",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kamillasantos-bit/atividadespython/blob/main/lista%20para%20a%20segunda\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wKVeY-30hulZ",
        "outputId": "87cc89ec-e115-4395-bd6b-88b3a6806d55"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['O Quinze', 'Cinco Minutos', 'O Pequeno Príncipe']\n",
            "Primeiro livro: O Quinze\n",
            "Último livro: O Pequeno Príncipe\n",
            "['O Quinze', 'Cinco Minutos', 'O Pequeno Príncipe', 'Barquinhos de papel', 'Textos para tocar cicatrizes']\n",
            "['O Quinze', 'Duna', 'Cinco Minutos', 'O Pequeno Príncipe', 'Barquinhos de papel', 'Textos para tocar cicatrizes']\n",
            "Livro não encontrado\n",
            "['O Quinze', 'Duna', 'Cinco Minutos', 'O Pequeno Príncipe', 'Barquinhos de papel', 'Textos para tocar cicatrizes']\n",
            "O número 2 aparece 3 vezes na lista\n",
            "O livro O Quinze é interessante\n",
            "O livro Duna é interessante\n",
            "O livro Cinco Minutos é interessante\n",
            "O livro O Pequeno Príncipe é interessante\n",
            "O livro Barquinhos de papel é interessante\n",
            "O livro Textos para tocar cicatrizes é interessante\n",
            "18\n",
            "25\n",
            "30\n",
            "A soma dos valores é: 100\n",
            "Digite as 3 notas do aluno 1:\n",
            "Nota 1: 2\n",
            "Nota 2: 2\n",
            "Nota 3: 2\n",
            "Digite as 3 notas do aluno 2:\n",
            "Nota 1: 2\n",
            "Nota 2: 2\n",
            "Nota 3: 2\n",
            "Média do aluno 1: 2.00\n",
            "Média do aluno 2: 2.00\n",
            "tor cav bis rai rei bis cav tor\n",
            "pea pea pea pea pea pea pea pea\n",
            "[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]\n",
            "[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]\n",
            "[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]\n",
            "[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]\n",
            "pea pea pea pea pea pea pea pea\n",
            "tor cav bis rai rei bis cav tor\n"
          ]
        }
      ],
      "source": [
        "#1\n",
        "Livros = [\"O Quinze\", \"Cinco Minutos\", \"O Pequeno Príncipe\"]\n",
        "\n",
        "print(Livros)\n",
        "\n",
        "#2\n",
        "print(\"Primeiro livro:\", Livros[0])\n",
        "print(\"Último livro:\", Livros[2])\n",
        "\n",
        "#3\n",
        "Livros.append(\"Barquinhos de papel\")\n",
        "Livros.append(\"Textos para tocar cicatrizes\")\n",
        "\n",
        "print(Livros)\n",
        "\n",
        "#4\n",
        "Livros.insert(1, \"Duna\")\n",
        "\n",
        "print(Livros)\n",
        "\n",
        "#5\n",
        "if \"Silêncio dos inocentes\" in Livros:\n",
        "    Livros.remove(\"Silêncio dos inocentes\")\n",
        "else:\n",
        "    print(\"Livro não encontrado\")\n",
        "\n",
        "print(Livros)\n",
        "\n",
        "#6\n",
        "números = [1, 2, 3, 2, 4, 2, 5]\n",
        "\n",
        "quantidade = números.count(2)\n",
        "\n",
        "print(\"O número 2 aparece\", quantidade, \"vezes na lista\")\n",
        "\n",
        "#7\n",
        "Livros = [\"O Quinze\", \"Duna\", \"Cinco Minutos\", \"O Pequeno Príncipe\", \"Barquinhos de papel\", \"Textos para tocar cicatrizes\"]\n",
        "\n",
        "for livro in Livros:\n",
        "    print(f\"O livro {livro} é interessante\")\n",
        "\n",
        "#8\n",
        "idades = [12, 18, 25, 14, 30]\n",
        "\n",
        "for idade in idades:\n",
        "    if idade >= 18:\n",
        "        print(idade)\n",
        "#9\n",
        "valores = [10, 20, 30, 40]\n",
        "soma = sum(valores)\n",
        "\n",
        "print(\"A soma dos valores é:\", soma)\n",
        "\n",
        "#10\n",
        "notas = []\n",
        "\n",
        "for i in range(2):\n",
        "    print(f\"Digite as 3 notas do aluno {i+1}:\")\n",
        "    aluno = []\n",
        "\n",
        "    for j in range(3):\n",
        "        nota = float(input(f\"Nota {j+1}: \"))\n",
        "        aluno.append(nota)\n",
        "\n",
        "    notas.append(aluno)\n",
        "\n",
        "for i in range(len(notas)):\n",
        "    media = sum(notas[i]) / len(notas[i])\n",
        "    print(f\"Média do aluno {i+1}: {media:.2f}\")\n",
        "\n",
        "#11\n",
        "import numpy as np\n",
        "\n",
        "# Criando tabuleiro 8x8 vazio com list comprehension\n",
        "tabuleiro = [[\"[ ]\" for _ in range(8)] for _ in range(8)]\n",
        "\n",
        "# Peças na ordem da primeira e última linha\n",
        "linha_pecas = [\"tor\", \"cav\", \"bis\", \"rai\", \"rei\", \"bis\", \"cav\", \"tor\"]\n",
        "\n",
        "# Colocando peças pretas (topo do tabuleiro)\n",
        "tabuleiro[0] = linha_pecas.copy()\n",
        "tabuleiro[1] = [\"pea\"] * 8\n",
        "\n",
        "# Colocando peças brancas (embaixo do tabuleiro)\n",
        "tabuleiro[6] = [\"pea\"] * 8\n",
        "tabuleiro[7] = linha_pecas.copy()\n",
        "\n",
        "# Imprimindo o tabuleiro com numpy para melhor visualização\n",
        "np_tabuleiro = np.array(tabuleiro)\n",
        "\n",
        "for linha in np_tabuleiro:\n",
        "    print(\" \".join(linha))\n"
      ]
    }
  ]
}